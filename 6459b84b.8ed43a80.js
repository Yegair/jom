(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{85:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return d})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return m}));var r=n(3),a=n(7),i=n(0),o=n(86),s=n(21),c=function(){var e=Object(s.default)().siteConfig;return i.createElement("code",null,e.customFields.projectVersion)},l={id:"installation",title:"Installation",slug:"./"},d={unversionedId:"getting-started/installation",id:"getting-started/installation",isDocsHomePage:!1,title:"Installation",description:"jom is distributed as a Maven package via the",source:"@site/docs/getting-started/installation.mdx",slug:"/getting-started/",permalink:"/jom/docs/getting-started/",editUrl:"https://github.com/Yegair/jom/edit/main/pages/docs/getting-started/installation.mdx",version:"current",sidebar:"docs",previous:{title:"Overview",permalink:"/jom/docs/"},next:{title:"Parser Basics",permalink:"/jom/docs/getting-started/parsers"}},p=[{value:"Gradle",id:"gradle",children:[]},{value:"Maven",id:"maven",children:[]},{value:"Transitive Dependencies",id:"transitive-dependencies",children:[{value:"Why Okio instead of Java InputStream and Reader?",id:"why-okio-instead-of-java-inputstream-and-reader",children:[]}]}],u={toc:p};function m(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("em",null,"jom")," is distributed as a Maven package via the"," ",Object(o.b)("a",{href:"https://search.maven.org/artifact/io.yegair.jom/jom",target:"_blank"},"central repository"),". The most recent version is ",Object(o.b)(c,{mdxType:"ProjectVersion"}),"."),Object(o.b)("h2",{id:"gradle"},"Gradle"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-kotlin",metastring:'title="build.gradle.kts"',title:'"build.gradle.kts"'}),'repositories {\n    mavenCentral()\n}\n\ndependencies {\n    implementation("io.yegair.jom:jom:$jomVersion")\n}\n')),Object(o.b)("h2",{id:"maven"},"Maven"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-xml",metastring:'title="pom.xml"',title:'"pom.xml"'}),"<dependency>\n  <groupId>io.yegair.jom</groupId>\n  <artifactId>jom</artifactId>\n  <version>${jom.version}</version>\n</dependency>\n")),Object(o.b)("h2",{id:"transitive-dependencies"},"Transitive Dependencies"),Object(o.b)("p",null,"jom depends on and makes heavy use of ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://square.github.io/okio/"}),"Okio")," for consuming input.\nOkio itself is written in Kotlin and depends on the Kotlin standard library.\nThus jom has exactly two runtime dependencies: Okio and the Kotlin standard library."),Object(o.b)("h3",{id:"why-okio-instead-of-java-inputstream-and-reader"},"Why Okio instead of Java InputStream and Reader?"),Object(o.b)("p",null,"jom is intended to parse text as well as binary data equally well.\nOkio treats both type of input the same (",Object(o.b)("inlineCode",{parentName:"p"},"Source"),"),\nwhereas Java treats them differently (",Object(o.b)("inlineCode",{parentName:"p"},"InputStream")," and ",Object(o.b)("inlineCode",{parentName:"p"},"Reader"),").\nWithout Okio jom wouldn't easily be able to provide a single API for parsing both types of data."),Object(o.b)("p",null,"However, I am aware that libraries with transitive dependencies may have some drawbacks,\nregarding version conflicts and final application size.\nThe decision for using Okio has been made because the benefits of using it by far outweigh the drawbacks of a\ntransitive dependency."))}m.isMDXComponent=!0},86:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return b}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),d=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=d(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),p=d(n),m=r,b=p["".concat(o,".").concat(m)]||p[m]||u[m]||i;return n?a.a.createElement(b,s(s({ref:t},l),{},{components:n})):a.a.createElement(b,s({ref:t},l))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);